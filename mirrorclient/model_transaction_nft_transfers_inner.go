/*
Hedera Mirror Node REST API

The Mirror Node REST API offers the ability to query cryptocurrency transactions and account information from a Hedera managed mirror node.  Base url: [/api/v1](/api/v1)  OpenAPI Spec: [/api/v1/docs/openapi.yml](/api/v1/docs/openapi.yml)

API version: 0.89.0
Contact: mirrornode@hedera.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mirrorclient

import (
	"encoding/json"
)

// checks if the TransactionNftTransfersInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TransactionNftTransfersInner{}

// TransactionNftTransfersInner struct for TransactionNftTransfersInner
type TransactionNftTransfersInner struct {
	IsApproval bool `json:"is_approval"`
	// Network entity ID in the format of `shard.realm.num`
	ReceiverAccountId NullableString `json:"receiver_account_id"`
	// Network entity ID in the format of `shard.realm.num`
	SenderAccountId NullableString `json:"sender_account_id"`
	SerialNumber int64 `json:"serial_number"`
	// Network entity ID in the format of `shard.realm.num`
	TokenId NullableString `json:"token_id"`
}

// NewTransactionNftTransfersInner instantiates a new TransactionNftTransfersInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTransactionNftTransfersInner(isApproval bool, receiverAccountId NullableString, senderAccountId NullableString, serialNumber int64, tokenId NullableString) *TransactionNftTransfersInner {
	this := TransactionNftTransfersInner{}
	this.IsApproval = isApproval
	this.ReceiverAccountId = receiverAccountId
	this.SenderAccountId = senderAccountId
	this.SerialNumber = serialNumber
	this.TokenId = tokenId
	return &this
}

// NewTransactionNftTransfersInnerWithDefaults instantiates a new TransactionNftTransfersInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTransactionNftTransfersInnerWithDefaults() *TransactionNftTransfersInner {
	this := TransactionNftTransfersInner{}
	return &this
}

// GetIsApproval returns the IsApproval field value
func (o *TransactionNftTransfersInner) GetIsApproval() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsApproval
}

// GetIsApprovalOk returns a tuple with the IsApproval field value
// and a boolean to check if the value has been set.
func (o *TransactionNftTransfersInner) GetIsApprovalOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsApproval, true
}

// SetIsApproval sets field value
func (o *TransactionNftTransfersInner) SetIsApproval(v bool) {
	o.IsApproval = v
}

// GetReceiverAccountId returns the ReceiverAccountId field value
// If the value is explicit nil, the zero value for string will be returned
func (o *TransactionNftTransfersInner) GetReceiverAccountId() string {
	if o == nil || o.ReceiverAccountId.Get() == nil {
		var ret string
		return ret
	}

	return *o.ReceiverAccountId.Get()
}

// GetReceiverAccountIdOk returns a tuple with the ReceiverAccountId field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TransactionNftTransfersInner) GetReceiverAccountIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ReceiverAccountId.Get(), o.ReceiverAccountId.IsSet()
}

// SetReceiverAccountId sets field value
func (o *TransactionNftTransfersInner) SetReceiverAccountId(v string) {
	o.ReceiverAccountId.Set(&v)
}

// GetSenderAccountId returns the SenderAccountId field value
// If the value is explicit nil, the zero value for string will be returned
func (o *TransactionNftTransfersInner) GetSenderAccountId() string {
	if o == nil || o.SenderAccountId.Get() == nil {
		var ret string
		return ret
	}

	return *o.SenderAccountId.Get()
}

// GetSenderAccountIdOk returns a tuple with the SenderAccountId field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TransactionNftTransfersInner) GetSenderAccountIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SenderAccountId.Get(), o.SenderAccountId.IsSet()
}

// SetSenderAccountId sets field value
func (o *TransactionNftTransfersInner) SetSenderAccountId(v string) {
	o.SenderAccountId.Set(&v)
}

// GetSerialNumber returns the SerialNumber field value
func (o *TransactionNftTransfersInner) GetSerialNumber() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.SerialNumber
}

// GetSerialNumberOk returns a tuple with the SerialNumber field value
// and a boolean to check if the value has been set.
func (o *TransactionNftTransfersInner) GetSerialNumberOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SerialNumber, true
}

// SetSerialNumber sets field value
func (o *TransactionNftTransfersInner) SetSerialNumber(v int64) {
	o.SerialNumber = v
}

// GetTokenId returns the TokenId field value
// If the value is explicit nil, the zero value for string will be returned
func (o *TransactionNftTransfersInner) GetTokenId() string {
	if o == nil || o.TokenId.Get() == nil {
		var ret string
		return ret
	}

	return *o.TokenId.Get()
}

// GetTokenIdOk returns a tuple with the TokenId field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TransactionNftTransfersInner) GetTokenIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TokenId.Get(), o.TokenId.IsSet()
}

// SetTokenId sets field value
func (o *TransactionNftTransfersInner) SetTokenId(v string) {
	o.TokenId.Set(&v)
}

func (o TransactionNftTransfersInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TransactionNftTransfersInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["is_approval"] = o.IsApproval
	toSerialize["receiver_account_id"] = o.ReceiverAccountId.Get()
	toSerialize["sender_account_id"] = o.SenderAccountId.Get()
	toSerialize["serial_number"] = o.SerialNumber
	toSerialize["token_id"] = o.TokenId.Get()
	return toSerialize, nil
}

type NullableTransactionNftTransfersInner struct {
	value *TransactionNftTransfersInner
	isSet bool
}

func (v NullableTransactionNftTransfersInner) Get() *TransactionNftTransfersInner {
	return v.value
}

func (v *NullableTransactionNftTransfersInner) Set(val *TransactionNftTransfersInner) {
	v.value = val
	v.isSet = true
}

func (v NullableTransactionNftTransfersInner) IsSet() bool {
	return v.isSet
}

func (v *NullableTransactionNftTransfersInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTransactionNftTransfersInner(val *TransactionNftTransfersInner) *NullableTransactionNftTransfersInner {
	return &NullableTransactionNftTransfersInner{value: val, isSet: true}
}

func (v NullableTransactionNftTransfersInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTransactionNftTransfersInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


