/*
Hedera Mirror Node REST API

The Mirror Node REST API offers the ability to query cryptocurrency transactions and account information from a Hedera managed mirror node.  Base url: [/api/v1](/api/v1)  OpenAPI Spec: [/api/v1/docs/openapi.yml](/api/v1/docs/openapi.yml)

API version: 0.89.0
Contact: mirrornode@hedera.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mirrorclient

import (
	"encoding/json"
)

// checks if the SchedulesResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SchedulesResponse{}

// SchedulesResponse struct for SchedulesResponse
type SchedulesResponse struct {
	Schedules []Schedule `json:"schedules,omitempty"`
	Links *Links `json:"links,omitempty"`
}

// NewSchedulesResponse instantiates a new SchedulesResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSchedulesResponse() *SchedulesResponse {
	this := SchedulesResponse{}
	return &this
}

// NewSchedulesResponseWithDefaults instantiates a new SchedulesResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSchedulesResponseWithDefaults() *SchedulesResponse {
	this := SchedulesResponse{}
	return &this
}

// GetSchedules returns the Schedules field value if set, zero value otherwise.
func (o *SchedulesResponse) GetSchedules() []Schedule {
	if o == nil || IsNil(o.Schedules) {
		var ret []Schedule
		return ret
	}
	return o.Schedules
}

// GetSchedulesOk returns a tuple with the Schedules field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SchedulesResponse) GetSchedulesOk() ([]Schedule, bool) {
	if o == nil || IsNil(o.Schedules) {
		return nil, false
	}
	return o.Schedules, true
}

// HasSchedules returns a boolean if a field has been set.
func (o *SchedulesResponse) HasSchedules() bool {
	if o != nil && !IsNil(o.Schedules) {
		return true
	}

	return false
}

// SetSchedules gets a reference to the given []Schedule and assigns it to the Schedules field.
func (o *SchedulesResponse) SetSchedules(v []Schedule) {
	o.Schedules = v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *SchedulesResponse) GetLinks() Links {
	if o == nil || IsNil(o.Links) {
		var ret Links
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SchedulesResponse) GetLinksOk() (*Links, bool) {
	if o == nil || IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *SchedulesResponse) HasLinks() bool {
	if o != nil && !IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given Links and assigns it to the Links field.
func (o *SchedulesResponse) SetLinks(v Links) {
	o.Links = &v
}

func (o SchedulesResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SchedulesResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Schedules) {
		toSerialize["schedules"] = o.Schedules
	}
	if !IsNil(o.Links) {
		toSerialize["links"] = o.Links
	}
	return toSerialize, nil
}

type NullableSchedulesResponse struct {
	value *SchedulesResponse
	isSet bool
}

func (v NullableSchedulesResponse) Get() *SchedulesResponse {
	return v.value
}

func (v *NullableSchedulesResponse) Set(val *SchedulesResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableSchedulesResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableSchedulesResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSchedulesResponse(val *SchedulesResponse) *NullableSchedulesResponse {
	return &NullableSchedulesResponse{value: val, isSet: true}
}

func (v NullableSchedulesResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSchedulesResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


