/*
Hedera Mirror Node REST API

The Mirror Node REST API offers the ability to query cryptocurrency transactions and account information from a Hedera managed mirror node.  Base url: [/api/v1](/api/v1)  OpenAPI Spec: [/api/v1/docs/openapi.yml](/api/v1/docs/openapi.yml)

API version: 0.89.0
Contact: mirrornode@hedera.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mirrorclient

import (
	"encoding/json"
	"os"
)

// checks if the ContractCallResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ContractCallResponse{}

// ContractCallResponse struct for ContractCallResponse
type ContractCallResponse struct {
	// Result in hexadecimal from executed contract call.
	Result **os.File `json:"result,omitempty"`
}

// NewContractCallResponse instantiates a new ContractCallResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewContractCallResponse() *ContractCallResponse {
	this := ContractCallResponse{}
	return &this
}

// NewContractCallResponseWithDefaults instantiates a new ContractCallResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewContractCallResponseWithDefaults() *ContractCallResponse {
	this := ContractCallResponse{}
	return &this
}

// GetResult returns the Result field value if set, zero value otherwise.
func (o *ContractCallResponse) GetResult() *os.File {
	if o == nil || IsNil(o.Result) {
		var ret *os.File
		return ret
	}
	return *o.Result
}

// GetResultOk returns a tuple with the Result field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContractCallResponse) GetResultOk() (**os.File, bool) {
	if o == nil || IsNil(o.Result) {
		return nil, false
	}
	return o.Result, true
}

// HasResult returns a boolean if a field has been set.
func (o *ContractCallResponse) HasResult() bool {
	if o != nil && !IsNil(o.Result) {
		return true
	}

	return false
}

// SetResult gets a reference to the given *os.File and assigns it to the Result field.
func (o *ContractCallResponse) SetResult(v *os.File) {
	o.Result = &v
}

func (o ContractCallResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ContractCallResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Result) {
		toSerialize["result"] = o.Result
	}
	return toSerialize, nil
}

type NullableContractCallResponse struct {
	value *ContractCallResponse
	isSet bool
}

func (v NullableContractCallResponse) Get() *ContractCallResponse {
	return v.value
}

func (v *NullableContractCallResponse) Set(val *ContractCallResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableContractCallResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableContractCallResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableContractCallResponse(val *ContractCallResponse) *NullableContractCallResponse {
	return &NullableContractCallResponse{value: val, isSet: true}
}

func (v NullableContractCallResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableContractCallResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


