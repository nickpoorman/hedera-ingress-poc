/*
Hedera Mirror Node REST API

The Mirror Node REST API offers the ability to query cryptocurrency transactions and account information from a Hedera managed mirror node.  Base url: [/api/v1](/api/v1)  OpenAPI Spec: [/api/v1/docs/openapi.yml](/api/v1/docs/openapi.yml)

API version: 0.89.0
Contact: mirrornode@hedera.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mirrorclient

import (
	"encoding/json"
)

// checks if the TransactionDetailAllOfAssessedCustomFees type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TransactionDetailAllOfAssessedCustomFees{}

// TransactionDetailAllOfAssessedCustomFees struct for TransactionDetailAllOfAssessedCustomFees
type TransactionDetailAllOfAssessedCustomFees struct {
	Amount *int64 `json:"amount,omitempty"`
	// Network entity ID in the format of `shard.realm.num`
	CollectorAccountId NullableString `json:"collector_account_id,omitempty"`
	EffectivePayerAccountIds []*string `json:"effective_payer_account_ids,omitempty"`
	// Network entity ID in the format of `shard.realm.num`
	TokenId NullableString `json:"token_id,omitempty"`
}

// NewTransactionDetailAllOfAssessedCustomFees instantiates a new TransactionDetailAllOfAssessedCustomFees object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTransactionDetailAllOfAssessedCustomFees() *TransactionDetailAllOfAssessedCustomFees {
	this := TransactionDetailAllOfAssessedCustomFees{}
	return &this
}

// NewTransactionDetailAllOfAssessedCustomFeesWithDefaults instantiates a new TransactionDetailAllOfAssessedCustomFees object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTransactionDetailAllOfAssessedCustomFeesWithDefaults() *TransactionDetailAllOfAssessedCustomFees {
	this := TransactionDetailAllOfAssessedCustomFees{}
	return &this
}

// GetAmount returns the Amount field value if set, zero value otherwise.
func (o *TransactionDetailAllOfAssessedCustomFees) GetAmount() int64 {
	if o == nil || IsNil(o.Amount) {
		var ret int64
		return ret
	}
	return *o.Amount
}

// GetAmountOk returns a tuple with the Amount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionDetailAllOfAssessedCustomFees) GetAmountOk() (*int64, bool) {
	if o == nil || IsNil(o.Amount) {
		return nil, false
	}
	return o.Amount, true
}

// HasAmount returns a boolean if a field has been set.
func (o *TransactionDetailAllOfAssessedCustomFees) HasAmount() bool {
	if o != nil && !IsNil(o.Amount) {
		return true
	}

	return false
}

// SetAmount gets a reference to the given int64 and assigns it to the Amount field.
func (o *TransactionDetailAllOfAssessedCustomFees) SetAmount(v int64) {
	o.Amount = &v
}

// GetCollectorAccountId returns the CollectorAccountId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TransactionDetailAllOfAssessedCustomFees) GetCollectorAccountId() string {
	if o == nil || IsNil(o.CollectorAccountId.Get()) {
		var ret string
		return ret
	}
	return *o.CollectorAccountId.Get()
}

// GetCollectorAccountIdOk returns a tuple with the CollectorAccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TransactionDetailAllOfAssessedCustomFees) GetCollectorAccountIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CollectorAccountId.Get(), o.CollectorAccountId.IsSet()
}

// HasCollectorAccountId returns a boolean if a field has been set.
func (o *TransactionDetailAllOfAssessedCustomFees) HasCollectorAccountId() bool {
	if o != nil && o.CollectorAccountId.IsSet() {
		return true
	}

	return false
}

// SetCollectorAccountId gets a reference to the given NullableString and assigns it to the CollectorAccountId field.
func (o *TransactionDetailAllOfAssessedCustomFees) SetCollectorAccountId(v string) {
	o.CollectorAccountId.Set(&v)
}
// SetCollectorAccountIdNil sets the value for CollectorAccountId to be an explicit nil
func (o *TransactionDetailAllOfAssessedCustomFees) SetCollectorAccountIdNil() {
	o.CollectorAccountId.Set(nil)
}

// UnsetCollectorAccountId ensures that no value is present for CollectorAccountId, not even an explicit nil
func (o *TransactionDetailAllOfAssessedCustomFees) UnsetCollectorAccountId() {
	o.CollectorAccountId.Unset()
}

// GetEffectivePayerAccountIds returns the EffectivePayerAccountIds field value if set, zero value otherwise.
func (o *TransactionDetailAllOfAssessedCustomFees) GetEffectivePayerAccountIds() []*string {
	if o == nil || IsNil(o.EffectivePayerAccountIds) {
		var ret []*string
		return ret
	}
	return o.EffectivePayerAccountIds
}

// GetEffectivePayerAccountIdsOk returns a tuple with the EffectivePayerAccountIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionDetailAllOfAssessedCustomFees) GetEffectivePayerAccountIdsOk() ([]*string, bool) {
	if o == nil || IsNil(o.EffectivePayerAccountIds) {
		return nil, false
	}
	return o.EffectivePayerAccountIds, true
}

// HasEffectivePayerAccountIds returns a boolean if a field has been set.
func (o *TransactionDetailAllOfAssessedCustomFees) HasEffectivePayerAccountIds() bool {
	if o != nil && !IsNil(o.EffectivePayerAccountIds) {
		return true
	}

	return false
}

// SetEffectivePayerAccountIds gets a reference to the given []*string and assigns it to the EffectivePayerAccountIds field.
func (o *TransactionDetailAllOfAssessedCustomFees) SetEffectivePayerAccountIds(v []*string) {
	o.EffectivePayerAccountIds = v
}

// GetTokenId returns the TokenId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TransactionDetailAllOfAssessedCustomFees) GetTokenId() string {
	if o == nil || IsNil(o.TokenId.Get()) {
		var ret string
		return ret
	}
	return *o.TokenId.Get()
}

// GetTokenIdOk returns a tuple with the TokenId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TransactionDetailAllOfAssessedCustomFees) GetTokenIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TokenId.Get(), o.TokenId.IsSet()
}

// HasTokenId returns a boolean if a field has been set.
func (o *TransactionDetailAllOfAssessedCustomFees) HasTokenId() bool {
	if o != nil && o.TokenId.IsSet() {
		return true
	}

	return false
}

// SetTokenId gets a reference to the given NullableString and assigns it to the TokenId field.
func (o *TransactionDetailAllOfAssessedCustomFees) SetTokenId(v string) {
	o.TokenId.Set(&v)
}
// SetTokenIdNil sets the value for TokenId to be an explicit nil
func (o *TransactionDetailAllOfAssessedCustomFees) SetTokenIdNil() {
	o.TokenId.Set(nil)
}

// UnsetTokenId ensures that no value is present for TokenId, not even an explicit nil
func (o *TransactionDetailAllOfAssessedCustomFees) UnsetTokenId() {
	o.TokenId.Unset()
}

func (o TransactionDetailAllOfAssessedCustomFees) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TransactionDetailAllOfAssessedCustomFees) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Amount) {
		toSerialize["amount"] = o.Amount
	}
	if o.CollectorAccountId.IsSet() {
		toSerialize["collector_account_id"] = o.CollectorAccountId.Get()
	}
	if !IsNil(o.EffectivePayerAccountIds) {
		toSerialize["effective_payer_account_ids"] = o.EffectivePayerAccountIds
	}
	if o.TokenId.IsSet() {
		toSerialize["token_id"] = o.TokenId.Get()
	}
	return toSerialize, nil
}

type NullableTransactionDetailAllOfAssessedCustomFees struct {
	value *TransactionDetailAllOfAssessedCustomFees
	isSet bool
}

func (v NullableTransactionDetailAllOfAssessedCustomFees) Get() *TransactionDetailAllOfAssessedCustomFees {
	return v.value
}

func (v *NullableTransactionDetailAllOfAssessedCustomFees) Set(val *TransactionDetailAllOfAssessedCustomFees) {
	v.value = val
	v.isSet = true
}

func (v NullableTransactionDetailAllOfAssessedCustomFees) IsSet() bool {
	return v.isSet
}

func (v *NullableTransactionDetailAllOfAssessedCustomFees) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTransactionDetailAllOfAssessedCustomFees(val *TransactionDetailAllOfAssessedCustomFees) *NullableTransactionDetailAllOfAssessedCustomFees {
	return &NullableTransactionDetailAllOfAssessedCustomFees{value: val, isSet: true}
}

func (v NullableTransactionDetailAllOfAssessedCustomFees) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTransactionDetailAllOfAssessedCustomFees) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


