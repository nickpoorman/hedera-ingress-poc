/*
Hedera Mirror Node REST API

The Mirror Node REST API offers the ability to query cryptocurrency transactions and account information from a Hedera managed mirror node.  Base url: [/api/v1](/api/v1)  OpenAPI Spec: [/api/v1/docs/openapi.yml](/api/v1/docs/openapi.yml)

API version: 0.89.0
Contact: mirrornode@hedera.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mirrorclient

import (
	"encoding/json"
	"os"
)

// checks if the ContractState type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ContractState{}

// ContractState struct for ContractState
type ContractState struct {
	// A network entity encoded as an EVM address in hex.
	Address *os.File `json:"address"`
	// Network entity ID in the format of `shard.realm.num`
	ContractId NullableString `json:"contract_id"`
	Timestamp string `json:"timestamp"`
	// The hex encoded storage slot.
	Slot *os.File `json:"slot"`
	// The hex encoded value to the slot. `0x` implies no value written.
	Value *os.File `json:"value"`
}

// NewContractState instantiates a new ContractState object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewContractState(address *os.File, contractId NullableString, timestamp string, slot *os.File, value *os.File) *ContractState {
	this := ContractState{}
	this.Address = address
	this.ContractId = contractId
	this.Timestamp = timestamp
	this.Slot = slot
	this.Value = value
	return &this
}

// NewContractStateWithDefaults instantiates a new ContractState object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewContractStateWithDefaults() *ContractState {
	this := ContractState{}
	return &this
}

// GetAddress returns the Address field value
func (o *ContractState) GetAddress() *os.File {
	if o == nil {
		var ret *os.File
		return ret
	}

	return o.Address
}

// GetAddressOk returns a tuple with the Address field value
// and a boolean to check if the value has been set.
func (o *ContractState) GetAddressOk() (**os.File, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Address, true
}

// SetAddress sets field value
func (o *ContractState) SetAddress(v *os.File) {
	o.Address = v
}

// GetContractId returns the ContractId field value
// If the value is explicit nil, the zero value for string will be returned
func (o *ContractState) GetContractId() string {
	if o == nil || o.ContractId.Get() == nil {
		var ret string
		return ret
	}

	return *o.ContractId.Get()
}

// GetContractIdOk returns a tuple with the ContractId field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContractState) GetContractIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ContractId.Get(), o.ContractId.IsSet()
}

// SetContractId sets field value
func (o *ContractState) SetContractId(v string) {
	o.ContractId.Set(&v)
}

// GetTimestamp returns the Timestamp field value
func (o *ContractState) GetTimestamp() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value
// and a boolean to check if the value has been set.
func (o *ContractState) GetTimestampOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Timestamp, true
}

// SetTimestamp sets field value
func (o *ContractState) SetTimestamp(v string) {
	o.Timestamp = v
}

// GetSlot returns the Slot field value
func (o *ContractState) GetSlot() *os.File {
	if o == nil {
		var ret *os.File
		return ret
	}

	return o.Slot
}

// GetSlotOk returns a tuple with the Slot field value
// and a boolean to check if the value has been set.
func (o *ContractState) GetSlotOk() (**os.File, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Slot, true
}

// SetSlot sets field value
func (o *ContractState) SetSlot(v *os.File) {
	o.Slot = v
}

// GetValue returns the Value field value
func (o *ContractState) GetValue() *os.File {
	if o == nil {
		var ret *os.File
		return ret
	}

	return o.Value
}

// GetValueOk returns a tuple with the Value field value
// and a boolean to check if the value has been set.
func (o *ContractState) GetValueOk() (**os.File, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Value, true
}

// SetValue sets field value
func (o *ContractState) SetValue(v *os.File) {
	o.Value = v
}

func (o ContractState) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ContractState) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["address"] = o.Address
	toSerialize["contract_id"] = o.ContractId.Get()
	toSerialize["timestamp"] = o.Timestamp
	toSerialize["slot"] = o.Slot
	toSerialize["value"] = o.Value
	return toSerialize, nil
}

type NullableContractState struct {
	value *ContractState
	isSet bool
}

func (v NullableContractState) Get() *ContractState {
	return v.value
}

func (v *NullableContractState) Set(val *ContractState) {
	v.value = val
	v.isSet = true
}

func (v NullableContractState) IsSet() bool {
	return v.isSet
}

func (v *NullableContractState) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableContractState(val *ContractState) *NullableContractState {
	return &NullableContractState{value: val, isSet: true}
}

func (v NullableContractState) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableContractState) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


