/*
Hedera Mirror Node REST API

The Mirror Node REST API offers the ability to query cryptocurrency transactions and account information from a Hedera managed mirror node.  Base url: [/api/v1](/api/v1)  OpenAPI Spec: [/api/v1/docs/openapi.yml](/api/v1/docs/openapi.yml)

API version: 0.89.0
Contact: mirrornode@hedera.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mirrorclient

import (
	"encoding/json"
)

// checks if the TokenDistributionInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TokenDistributionInner{}

// TokenDistributionInner struct for TokenDistributionInner
type TokenDistributionInner struct {
	// Network entity ID in the format of `shard.realm.num`
	Account NullableString `json:"account"`
	Balance int64 `json:"balance"`
}

// NewTokenDistributionInner instantiates a new TokenDistributionInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTokenDistributionInner(account NullableString, balance int64) *TokenDistributionInner {
	this := TokenDistributionInner{}
	this.Account = account
	this.Balance = balance
	return &this
}

// NewTokenDistributionInnerWithDefaults instantiates a new TokenDistributionInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTokenDistributionInnerWithDefaults() *TokenDistributionInner {
	this := TokenDistributionInner{}
	return &this
}

// GetAccount returns the Account field value
// If the value is explicit nil, the zero value for string will be returned
func (o *TokenDistributionInner) GetAccount() string {
	if o == nil || o.Account.Get() == nil {
		var ret string
		return ret
	}

	return *o.Account.Get()
}

// GetAccountOk returns a tuple with the Account field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TokenDistributionInner) GetAccountOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Account.Get(), o.Account.IsSet()
}

// SetAccount sets field value
func (o *TokenDistributionInner) SetAccount(v string) {
	o.Account.Set(&v)
}

// GetBalance returns the Balance field value
func (o *TokenDistributionInner) GetBalance() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Balance
}

// GetBalanceOk returns a tuple with the Balance field value
// and a boolean to check if the value has been set.
func (o *TokenDistributionInner) GetBalanceOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Balance, true
}

// SetBalance sets field value
func (o *TokenDistributionInner) SetBalance(v int64) {
	o.Balance = v
}

func (o TokenDistributionInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TokenDistributionInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["account"] = o.Account.Get()
	toSerialize["balance"] = o.Balance
	return toSerialize, nil
}

type NullableTokenDistributionInner struct {
	value *TokenDistributionInner
	isSet bool
}

func (v NullableTokenDistributionInner) Get() *TokenDistributionInner {
	return v.value
}

func (v *NullableTokenDistributionInner) Set(val *TokenDistributionInner) {
	v.value = val
	v.isSet = true
}

func (v NullableTokenDistributionInner) IsSet() bool {
	return v.isSet
}

func (v *NullableTokenDistributionInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTokenDistributionInner(val *TokenDistributionInner) *NullableTokenDistributionInner {
	return &NullableTokenDistributionInner{value: val, isSet: true}
}

func (v NullableTokenDistributionInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTokenDistributionInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


