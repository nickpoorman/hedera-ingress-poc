/*
Hedera Mirror Node REST API

The Mirror Node REST API offers the ability to query cryptocurrency transactions and account information from a Hedera managed mirror node.  Base url: [/api/v1](/api/v1)  OpenAPI Spec: [/api/v1/docs/openapi.yml](/api/v1/docs/openapi.yml)

API version: 0.89.0
Contact: mirrornode@hedera.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mirrorclient

import (
	"encoding/json"
	"os"
)

// checks if the AccountBalanceTransactions type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AccountBalanceTransactions{}

// AccountBalanceTransactions struct for AccountBalanceTransactions
type AccountBalanceTransactions struct {
	// Network entity ID in the format of `shard.realm.num`
	Account NullableString `json:"account"`
	// RFC4648 no-padding base32 encoded account alias
	Alias NullableString `json:"alias"`
	AutoRenewPeriod NullableInt64 `json:"auto_renew_period"`
	Balance NullableBalance `json:"balance"`
	CreatedTimestamp NullableString `json:"created_timestamp"`
	// Whether the account declines receiving a staking reward
	DeclineReward bool `json:"decline_reward"`
	Deleted NullableBool `json:"deleted"`
	EthereumNonce NullableInt64 `json:"ethereum_nonce"`
	// A network entity encoded as an EVM address in hex.
	EvmAddress Nullable*os.File `json:"evm_address"`
	ExpiryTimestamp NullableString `json:"expiry_timestamp"`
	Key NullableKey `json:"key"`
	MaxAutomaticTokenAssociations NullableInt32 `json:"max_automatic_token_associations"`
	Memo NullableString `json:"memo"`
	// The pending reward in tinybars the account will receive in the next reward payout. Note the value is updated at the end of each staking period and there may be delay to reflect the changes in the past staking period. 
	PendingReward *int64 `json:"pending_reward,omitempty"`
	ReceiverSigRequired NullableBool `json:"receiver_sig_required"`
	StakedAccountId string `json:"staked_account_id"`
	// The id of the node to which this account is staking
	StakedNodeId NullableInt64 `json:"staked_node_id"`
	StakePeriodStart string `json:"stake_period_start"`
	Transactions []Transaction `json:"transactions"`
	Links Links `json:"links"`
}

// NewAccountBalanceTransactions instantiates a new AccountBalanceTransactions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccountBalanceTransactions(account NullableString, alias NullableString, autoRenewPeriod NullableInt64, balance NullableBalance, createdTimestamp NullableString, declineReward bool, deleted NullableBool, ethereumNonce NullableInt64, evmAddress Nullable*os.File, expiryTimestamp NullableString, key NullableKey, maxAutomaticTokenAssociations NullableInt32, memo NullableString, receiverSigRequired NullableBool, stakedAccountId string, stakedNodeId NullableInt64, stakePeriodStart string, transactions []Transaction, links Links) *AccountBalanceTransactions {
	this := AccountBalanceTransactions{}
	this.Account = account
	this.Alias = alias
	this.AutoRenewPeriod = autoRenewPeriod
	this.Balance = balance
	this.CreatedTimestamp = createdTimestamp
	this.DeclineReward = declineReward
	this.Deleted = deleted
	this.EthereumNonce = ethereumNonce
	this.EvmAddress = evmAddress
	this.ExpiryTimestamp = expiryTimestamp
	this.Key = key
	this.MaxAutomaticTokenAssociations = maxAutomaticTokenAssociations
	this.Memo = memo
	this.ReceiverSigRequired = receiverSigRequired
	this.StakedAccountId = stakedAccountId
	this.StakedNodeId = stakedNodeId
	this.StakePeriodStart = stakePeriodStart
	this.Transactions = transactions
	this.Links = links
	return &this
}

// NewAccountBalanceTransactionsWithDefaults instantiates a new AccountBalanceTransactions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccountBalanceTransactionsWithDefaults() *AccountBalanceTransactions {
	this := AccountBalanceTransactions{}
	return &this
}

// GetAccount returns the Account field value
// If the value is explicit nil, the zero value for string will be returned
func (o *AccountBalanceTransactions) GetAccount() string {
	if o == nil || o.Account.Get() == nil {
		var ret string
		return ret
	}

	return *o.Account.Get()
}

// GetAccountOk returns a tuple with the Account field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AccountBalanceTransactions) GetAccountOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Account.Get(), o.Account.IsSet()
}

// SetAccount sets field value
func (o *AccountBalanceTransactions) SetAccount(v string) {
	o.Account.Set(&v)
}

// GetAlias returns the Alias field value
// If the value is explicit nil, the zero value for string will be returned
func (o *AccountBalanceTransactions) GetAlias() string {
	if o == nil || o.Alias.Get() == nil {
		var ret string
		return ret
	}

	return *o.Alias.Get()
}

// GetAliasOk returns a tuple with the Alias field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AccountBalanceTransactions) GetAliasOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Alias.Get(), o.Alias.IsSet()
}

// SetAlias sets field value
func (o *AccountBalanceTransactions) SetAlias(v string) {
	o.Alias.Set(&v)
}

// GetAutoRenewPeriod returns the AutoRenewPeriod field value
// If the value is explicit nil, the zero value for int64 will be returned
func (o *AccountBalanceTransactions) GetAutoRenewPeriod() int64 {
	if o == nil || o.AutoRenewPeriod.Get() == nil {
		var ret int64
		return ret
	}

	return *o.AutoRenewPeriod.Get()
}

// GetAutoRenewPeriodOk returns a tuple with the AutoRenewPeriod field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AccountBalanceTransactions) GetAutoRenewPeriodOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.AutoRenewPeriod.Get(), o.AutoRenewPeriod.IsSet()
}

// SetAutoRenewPeriod sets field value
func (o *AccountBalanceTransactions) SetAutoRenewPeriod(v int64) {
	o.AutoRenewPeriod.Set(&v)
}

// GetBalance returns the Balance field value
// If the value is explicit nil, the zero value for Balance will be returned
func (o *AccountBalanceTransactions) GetBalance() Balance {
	if o == nil || o.Balance.Get() == nil {
		var ret Balance
		return ret
	}

	return *o.Balance.Get()
}

// GetBalanceOk returns a tuple with the Balance field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AccountBalanceTransactions) GetBalanceOk() (*Balance, bool) {
	if o == nil {
		return nil, false
	}
	return o.Balance.Get(), o.Balance.IsSet()
}

// SetBalance sets field value
func (o *AccountBalanceTransactions) SetBalance(v Balance) {
	o.Balance.Set(&v)
}

// GetCreatedTimestamp returns the CreatedTimestamp field value
// If the value is explicit nil, the zero value for string will be returned
func (o *AccountBalanceTransactions) GetCreatedTimestamp() string {
	if o == nil || o.CreatedTimestamp.Get() == nil {
		var ret string
		return ret
	}

	return *o.CreatedTimestamp.Get()
}

// GetCreatedTimestampOk returns a tuple with the CreatedTimestamp field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AccountBalanceTransactions) GetCreatedTimestampOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CreatedTimestamp.Get(), o.CreatedTimestamp.IsSet()
}

// SetCreatedTimestamp sets field value
func (o *AccountBalanceTransactions) SetCreatedTimestamp(v string) {
	o.CreatedTimestamp.Set(&v)
}

// GetDeclineReward returns the DeclineReward field value
func (o *AccountBalanceTransactions) GetDeclineReward() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.DeclineReward
}

// GetDeclineRewardOk returns a tuple with the DeclineReward field value
// and a boolean to check if the value has been set.
func (o *AccountBalanceTransactions) GetDeclineRewardOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DeclineReward, true
}

// SetDeclineReward sets field value
func (o *AccountBalanceTransactions) SetDeclineReward(v bool) {
	o.DeclineReward = v
}

// GetDeleted returns the Deleted field value
// If the value is explicit nil, the zero value for bool will be returned
func (o *AccountBalanceTransactions) GetDeleted() bool {
	if o == nil || o.Deleted.Get() == nil {
		var ret bool
		return ret
	}

	return *o.Deleted.Get()
}

// GetDeletedOk returns a tuple with the Deleted field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AccountBalanceTransactions) GetDeletedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.Deleted.Get(), o.Deleted.IsSet()
}

// SetDeleted sets field value
func (o *AccountBalanceTransactions) SetDeleted(v bool) {
	o.Deleted.Set(&v)
}

// GetEthereumNonce returns the EthereumNonce field value
// If the value is explicit nil, the zero value for int64 will be returned
func (o *AccountBalanceTransactions) GetEthereumNonce() int64 {
	if o == nil || o.EthereumNonce.Get() == nil {
		var ret int64
		return ret
	}

	return *o.EthereumNonce.Get()
}

// GetEthereumNonceOk returns a tuple with the EthereumNonce field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AccountBalanceTransactions) GetEthereumNonceOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.EthereumNonce.Get(), o.EthereumNonce.IsSet()
}

// SetEthereumNonce sets field value
func (o *AccountBalanceTransactions) SetEthereumNonce(v int64) {
	o.EthereumNonce.Set(&v)
}

// GetEvmAddress returns the EvmAddress field value
// If the value is explicit nil, the zero value for *os.File will be returned
func (o *AccountBalanceTransactions) GetEvmAddress() *os.File {
	if o == nil || o.EvmAddress.Get() == nil {
		var ret *os.File
		return ret
	}

	return *o.EvmAddress.Get()
}

// GetEvmAddressOk returns a tuple with the EvmAddress field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AccountBalanceTransactions) GetEvmAddressOk() (**os.File, bool) {
	if o == nil {
		return nil, false
	}
	return o.EvmAddress.Get(), o.EvmAddress.IsSet()
}

// SetEvmAddress sets field value
func (o *AccountBalanceTransactions) SetEvmAddress(v *os.File) {
	o.EvmAddress.Set(&v)
}

// GetExpiryTimestamp returns the ExpiryTimestamp field value
// If the value is explicit nil, the zero value for string will be returned
func (o *AccountBalanceTransactions) GetExpiryTimestamp() string {
	if o == nil || o.ExpiryTimestamp.Get() == nil {
		var ret string
		return ret
	}

	return *o.ExpiryTimestamp.Get()
}

// GetExpiryTimestampOk returns a tuple with the ExpiryTimestamp field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AccountBalanceTransactions) GetExpiryTimestampOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ExpiryTimestamp.Get(), o.ExpiryTimestamp.IsSet()
}

// SetExpiryTimestamp sets field value
func (o *AccountBalanceTransactions) SetExpiryTimestamp(v string) {
	o.ExpiryTimestamp.Set(&v)
}

// GetKey returns the Key field value
// If the value is explicit nil, the zero value for Key will be returned
func (o *AccountBalanceTransactions) GetKey() Key {
	if o == nil || o.Key.Get() == nil {
		var ret Key
		return ret
	}

	return *o.Key.Get()
}

// GetKeyOk returns a tuple with the Key field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AccountBalanceTransactions) GetKeyOk() (*Key, bool) {
	if o == nil {
		return nil, false
	}
	return o.Key.Get(), o.Key.IsSet()
}

// SetKey sets field value
func (o *AccountBalanceTransactions) SetKey(v Key) {
	o.Key.Set(&v)
}

// GetMaxAutomaticTokenAssociations returns the MaxAutomaticTokenAssociations field value
// If the value is explicit nil, the zero value for int32 will be returned
func (o *AccountBalanceTransactions) GetMaxAutomaticTokenAssociations() int32 {
	if o == nil || o.MaxAutomaticTokenAssociations.Get() == nil {
		var ret int32
		return ret
	}

	return *o.MaxAutomaticTokenAssociations.Get()
}

// GetMaxAutomaticTokenAssociationsOk returns a tuple with the MaxAutomaticTokenAssociations field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AccountBalanceTransactions) GetMaxAutomaticTokenAssociationsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.MaxAutomaticTokenAssociations.Get(), o.MaxAutomaticTokenAssociations.IsSet()
}

// SetMaxAutomaticTokenAssociations sets field value
func (o *AccountBalanceTransactions) SetMaxAutomaticTokenAssociations(v int32) {
	o.MaxAutomaticTokenAssociations.Set(&v)
}

// GetMemo returns the Memo field value
// If the value is explicit nil, the zero value for string will be returned
func (o *AccountBalanceTransactions) GetMemo() string {
	if o == nil || o.Memo.Get() == nil {
		var ret string
		return ret
	}

	return *o.Memo.Get()
}

// GetMemoOk returns a tuple with the Memo field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AccountBalanceTransactions) GetMemoOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Memo.Get(), o.Memo.IsSet()
}

// SetMemo sets field value
func (o *AccountBalanceTransactions) SetMemo(v string) {
	o.Memo.Set(&v)
}

// GetPendingReward returns the PendingReward field value if set, zero value otherwise.
func (o *AccountBalanceTransactions) GetPendingReward() int64 {
	if o == nil || IsNil(o.PendingReward) {
		var ret int64
		return ret
	}
	return *o.PendingReward
}

// GetPendingRewardOk returns a tuple with the PendingReward field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountBalanceTransactions) GetPendingRewardOk() (*int64, bool) {
	if o == nil || IsNil(o.PendingReward) {
		return nil, false
	}
	return o.PendingReward, true
}

// HasPendingReward returns a boolean if a field has been set.
func (o *AccountBalanceTransactions) HasPendingReward() bool {
	if o != nil && !IsNil(o.PendingReward) {
		return true
	}

	return false
}

// SetPendingReward gets a reference to the given int64 and assigns it to the PendingReward field.
func (o *AccountBalanceTransactions) SetPendingReward(v int64) {
	o.PendingReward = &v
}

// GetReceiverSigRequired returns the ReceiverSigRequired field value
// If the value is explicit nil, the zero value for bool will be returned
func (o *AccountBalanceTransactions) GetReceiverSigRequired() bool {
	if o == nil || o.ReceiverSigRequired.Get() == nil {
		var ret bool
		return ret
	}

	return *o.ReceiverSigRequired.Get()
}

// GetReceiverSigRequiredOk returns a tuple with the ReceiverSigRequired field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AccountBalanceTransactions) GetReceiverSigRequiredOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.ReceiverSigRequired.Get(), o.ReceiverSigRequired.IsSet()
}

// SetReceiverSigRequired sets field value
func (o *AccountBalanceTransactions) SetReceiverSigRequired(v bool) {
	o.ReceiverSigRequired.Set(&v)
}

// GetStakedAccountId returns the StakedAccountId field value
func (o *AccountBalanceTransactions) GetStakedAccountId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.StakedAccountId
}

// GetStakedAccountIdOk returns a tuple with the StakedAccountId field value
// and a boolean to check if the value has been set.
func (o *AccountBalanceTransactions) GetStakedAccountIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StakedAccountId, true
}

// SetStakedAccountId sets field value
func (o *AccountBalanceTransactions) SetStakedAccountId(v string) {
	o.StakedAccountId = v
}

// GetStakedNodeId returns the StakedNodeId field value
// If the value is explicit nil, the zero value for int64 will be returned
func (o *AccountBalanceTransactions) GetStakedNodeId() int64 {
	if o == nil || o.StakedNodeId.Get() == nil {
		var ret int64
		return ret
	}

	return *o.StakedNodeId.Get()
}

// GetStakedNodeIdOk returns a tuple with the StakedNodeId field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AccountBalanceTransactions) GetStakedNodeIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.StakedNodeId.Get(), o.StakedNodeId.IsSet()
}

// SetStakedNodeId sets field value
func (o *AccountBalanceTransactions) SetStakedNodeId(v int64) {
	o.StakedNodeId.Set(&v)
}

// GetStakePeriodStart returns the StakePeriodStart field value
func (o *AccountBalanceTransactions) GetStakePeriodStart() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.StakePeriodStart
}

// GetStakePeriodStartOk returns a tuple with the StakePeriodStart field value
// and a boolean to check if the value has been set.
func (o *AccountBalanceTransactions) GetStakePeriodStartOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StakePeriodStart, true
}

// SetStakePeriodStart sets field value
func (o *AccountBalanceTransactions) SetStakePeriodStart(v string) {
	o.StakePeriodStart = v
}

// GetTransactions returns the Transactions field value
func (o *AccountBalanceTransactions) GetTransactions() []Transaction {
	if o == nil {
		var ret []Transaction
		return ret
	}

	return o.Transactions
}

// GetTransactionsOk returns a tuple with the Transactions field value
// and a boolean to check if the value has been set.
func (o *AccountBalanceTransactions) GetTransactionsOk() ([]Transaction, bool) {
	if o == nil {
		return nil, false
	}
	return o.Transactions, true
}

// SetTransactions sets field value
func (o *AccountBalanceTransactions) SetTransactions(v []Transaction) {
	o.Transactions = v
}

// GetLinks returns the Links field value
func (o *AccountBalanceTransactions) GetLinks() Links {
	if o == nil {
		var ret Links
		return ret
	}

	return o.Links
}

// GetLinksOk returns a tuple with the Links field value
// and a boolean to check if the value has been set.
func (o *AccountBalanceTransactions) GetLinksOk() (*Links, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Links, true
}

// SetLinks sets field value
func (o *AccountBalanceTransactions) SetLinks(v Links) {
	o.Links = v
}

func (o AccountBalanceTransactions) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AccountBalanceTransactions) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["account"] = o.Account.Get()
	toSerialize["alias"] = o.Alias.Get()
	toSerialize["auto_renew_period"] = o.AutoRenewPeriod.Get()
	toSerialize["balance"] = o.Balance.Get()
	toSerialize["created_timestamp"] = o.CreatedTimestamp.Get()
	toSerialize["decline_reward"] = o.DeclineReward
	toSerialize["deleted"] = o.Deleted.Get()
	toSerialize["ethereum_nonce"] = o.EthereumNonce.Get()
	toSerialize["evm_address"] = o.EvmAddress.Get()
	toSerialize["expiry_timestamp"] = o.ExpiryTimestamp.Get()
	toSerialize["key"] = o.Key.Get()
	toSerialize["max_automatic_token_associations"] = o.MaxAutomaticTokenAssociations.Get()
	toSerialize["memo"] = o.Memo.Get()
	if !IsNil(o.PendingReward) {
		toSerialize["pending_reward"] = o.PendingReward
	}
	toSerialize["receiver_sig_required"] = o.ReceiverSigRequired.Get()
	toSerialize["staked_account_id"] = o.StakedAccountId
	toSerialize["staked_node_id"] = o.StakedNodeId.Get()
	toSerialize["stake_period_start"] = o.StakePeriodStart
	toSerialize["transactions"] = o.Transactions
	toSerialize["links"] = o.Links
	return toSerialize, nil
}

type NullableAccountBalanceTransactions struct {
	value *AccountBalanceTransactions
	isSet bool
}

func (v NullableAccountBalanceTransactions) Get() *AccountBalanceTransactions {
	return v.value
}

func (v *NullableAccountBalanceTransactions) Set(val *AccountBalanceTransactions) {
	v.value = val
	v.isSet = true
}

func (v NullableAccountBalanceTransactions) IsSet() bool {
	return v.isSet
}

func (v *NullableAccountBalanceTransactions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccountBalanceTransactions(val *AccountBalanceTransactions) *NullableAccountBalanceTransactions {
	return &NullableAccountBalanceTransactions{value: val, isSet: true}
}

func (v NullableAccountBalanceTransactions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccountBalanceTransactions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


