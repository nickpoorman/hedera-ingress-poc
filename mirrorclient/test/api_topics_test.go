/*
Hedera Mirror Node REST API

Testing TopicsAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package mirrorclient

import (
	"context"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
	openapiclient "github.com/nickpoorman/hedera-ingress/mirrorclient"
)

func Test_mirrorclient_TopicsAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test TopicsAPIService GetTopicMessageByIdAndSequenceNumber", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var topicId string
		var sequenceNumber int64

		resp, httpRes, err := apiClient.TopicsAPI.GetTopicMessageByIdAndSequenceNumber(context.Background(), topicId, sequenceNumber).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test TopicsAPIService GetTopicMessagesByConsensusTimestamp", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var timestamp string

		resp, httpRes, err := apiClient.TopicsAPI.GetTopicMessagesByConsensusTimestamp(context.Background(), timestamp).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test TopicsAPIService ListTopicMessagesById", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var topicId string

		resp, httpRes, err := apiClient.TopicsAPI.ListTopicMessagesById(context.Background(), topicId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
