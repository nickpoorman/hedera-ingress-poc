/*
Hedera Mirror Node REST API

The Mirror Node REST API offers the ability to query cryptocurrency transactions and account information from a Hedera managed mirror node.  Base url: [/api/v1](/api/v1)  OpenAPI Spec: [/api/v1/docs/openapi.yml](/api/v1/docs/openapi.yml)

API version: 0.89.0
Contact: mirrornode@hedera.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mirrorclient

import (
	"encoding/json"
)

// checks if the StateProofResponseCompactRecordFile type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &StateProofResponseCompactRecordFile{}

// StateProofResponseCompactRecordFile The record file the transaction belongs to, in compact format
type StateProofResponseCompactRecordFile struct {
	// The record file head
	Head string `json:"head"`
	// The start running hash object
	StartRunningHashObject string `json:"start_running_hash_object"`
	// THe end running hash object
	EndRunningHashObject string `json:"end_running_hash_object"`
	// The hashes of the transactions before the transaction in query, in consensus timestamp ascending order 
	HashesBefore []string `json:"hashes_before"`
	// The hashes of the transactions after the transaction in query, in consensus timestamp ascending order 
	HashesAfter []string `json:"hashes_after"`
	// The record stream object of the transaction in query
	RecordStreamObject string `json:"record_stream_object"`
	// The block number, in base64 encoding. Only present if version is 6
	BlockNumber NullableString `json:"block_number"`
}

// NewStateProofResponseCompactRecordFile instantiates a new StateProofResponseCompactRecordFile object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStateProofResponseCompactRecordFile(head string, startRunningHashObject string, endRunningHashObject string, hashesBefore []string, hashesAfter []string, recordStreamObject string, blockNumber NullableString) *StateProofResponseCompactRecordFile {
	this := StateProofResponseCompactRecordFile{}
	this.Head = head
	this.StartRunningHashObject = startRunningHashObject
	this.EndRunningHashObject = endRunningHashObject
	this.HashesBefore = hashesBefore
	this.HashesAfter = hashesAfter
	this.RecordStreamObject = recordStreamObject
	this.BlockNumber = blockNumber
	return &this
}

// NewStateProofResponseCompactRecordFileWithDefaults instantiates a new StateProofResponseCompactRecordFile object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStateProofResponseCompactRecordFileWithDefaults() *StateProofResponseCompactRecordFile {
	this := StateProofResponseCompactRecordFile{}
	return &this
}

// GetHead returns the Head field value
func (o *StateProofResponseCompactRecordFile) GetHead() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Head
}

// GetHeadOk returns a tuple with the Head field value
// and a boolean to check if the value has been set.
func (o *StateProofResponseCompactRecordFile) GetHeadOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Head, true
}

// SetHead sets field value
func (o *StateProofResponseCompactRecordFile) SetHead(v string) {
	o.Head = v
}

// GetStartRunningHashObject returns the StartRunningHashObject field value
func (o *StateProofResponseCompactRecordFile) GetStartRunningHashObject() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.StartRunningHashObject
}

// GetStartRunningHashObjectOk returns a tuple with the StartRunningHashObject field value
// and a boolean to check if the value has been set.
func (o *StateProofResponseCompactRecordFile) GetStartRunningHashObjectOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StartRunningHashObject, true
}

// SetStartRunningHashObject sets field value
func (o *StateProofResponseCompactRecordFile) SetStartRunningHashObject(v string) {
	o.StartRunningHashObject = v
}

// GetEndRunningHashObject returns the EndRunningHashObject field value
func (o *StateProofResponseCompactRecordFile) GetEndRunningHashObject() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EndRunningHashObject
}

// GetEndRunningHashObjectOk returns a tuple with the EndRunningHashObject field value
// and a boolean to check if the value has been set.
func (o *StateProofResponseCompactRecordFile) GetEndRunningHashObjectOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EndRunningHashObject, true
}

// SetEndRunningHashObject sets field value
func (o *StateProofResponseCompactRecordFile) SetEndRunningHashObject(v string) {
	o.EndRunningHashObject = v
}

// GetHashesBefore returns the HashesBefore field value
func (o *StateProofResponseCompactRecordFile) GetHashesBefore() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.HashesBefore
}

// GetHashesBeforeOk returns a tuple with the HashesBefore field value
// and a boolean to check if the value has been set.
func (o *StateProofResponseCompactRecordFile) GetHashesBeforeOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.HashesBefore, true
}

// SetHashesBefore sets field value
func (o *StateProofResponseCompactRecordFile) SetHashesBefore(v []string) {
	o.HashesBefore = v
}

// GetHashesAfter returns the HashesAfter field value
func (o *StateProofResponseCompactRecordFile) GetHashesAfter() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.HashesAfter
}

// GetHashesAfterOk returns a tuple with the HashesAfter field value
// and a boolean to check if the value has been set.
func (o *StateProofResponseCompactRecordFile) GetHashesAfterOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.HashesAfter, true
}

// SetHashesAfter sets field value
func (o *StateProofResponseCompactRecordFile) SetHashesAfter(v []string) {
	o.HashesAfter = v
}

// GetRecordStreamObject returns the RecordStreamObject field value
func (o *StateProofResponseCompactRecordFile) GetRecordStreamObject() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RecordStreamObject
}

// GetRecordStreamObjectOk returns a tuple with the RecordStreamObject field value
// and a boolean to check if the value has been set.
func (o *StateProofResponseCompactRecordFile) GetRecordStreamObjectOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RecordStreamObject, true
}

// SetRecordStreamObject sets field value
func (o *StateProofResponseCompactRecordFile) SetRecordStreamObject(v string) {
	o.RecordStreamObject = v
}

// GetBlockNumber returns the BlockNumber field value
// If the value is explicit nil, the zero value for string will be returned
func (o *StateProofResponseCompactRecordFile) GetBlockNumber() string {
	if o == nil || o.BlockNumber.Get() == nil {
		var ret string
		return ret
	}

	return *o.BlockNumber.Get()
}

// GetBlockNumberOk returns a tuple with the BlockNumber field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *StateProofResponseCompactRecordFile) GetBlockNumberOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.BlockNumber.Get(), o.BlockNumber.IsSet()
}

// SetBlockNumber sets field value
func (o *StateProofResponseCompactRecordFile) SetBlockNumber(v string) {
	o.BlockNumber.Set(&v)
}

func (o StateProofResponseCompactRecordFile) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o StateProofResponseCompactRecordFile) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["head"] = o.Head
	toSerialize["start_running_hash_object"] = o.StartRunningHashObject
	toSerialize["end_running_hash_object"] = o.EndRunningHashObject
	toSerialize["hashes_before"] = o.HashesBefore
	toSerialize["hashes_after"] = o.HashesAfter
	toSerialize["record_stream_object"] = o.RecordStreamObject
	toSerialize["block_number"] = o.BlockNumber.Get()
	return toSerialize, nil
}

type NullableStateProofResponseCompactRecordFile struct {
	value *StateProofResponseCompactRecordFile
	isSet bool
}

func (v NullableStateProofResponseCompactRecordFile) Get() *StateProofResponseCompactRecordFile {
	return v.value
}

func (v *NullableStateProofResponseCompactRecordFile) Set(val *StateProofResponseCompactRecordFile) {
	v.value = val
	v.isSet = true
}

func (v NullableStateProofResponseCompactRecordFile) IsSet() bool {
	return v.isSet
}

func (v *NullableStateProofResponseCompactRecordFile) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStateProofResponseCompactRecordFile(val *StateProofResponseCompactRecordFile) *NullableStateProofResponseCompactRecordFile {
	return &NullableStateProofResponseCompactRecordFile{value: val, isSet: true}
}

func (v NullableStateProofResponseCompactRecordFile) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStateProofResponseCompactRecordFile) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


