/*
Hedera Mirror Node REST API

The Mirror Node REST API offers the ability to query cryptocurrency transactions and account information from a Hedera managed mirror node.  Base url: [/api/v1](/api/v1)  OpenAPI Spec: [/api/v1/docs/openapi.yml](/api/v1/docs/openapi.yml)

API version: 0.89.0
Contact: mirrornode@hedera.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mirrorclient

import (
	"encoding/json"
)

// checks if the ErrorStatus type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ErrorStatus{}

// ErrorStatus struct for ErrorStatus
type ErrorStatus struct {
	Messages []ErrorStatusMessagesInner `json:"messages,omitempty"`
}

// NewErrorStatus instantiates a new ErrorStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewErrorStatus() *ErrorStatus {
	this := ErrorStatus{}
	return &this
}

// NewErrorStatusWithDefaults instantiates a new ErrorStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewErrorStatusWithDefaults() *ErrorStatus {
	this := ErrorStatus{}
	return &this
}

// GetMessages returns the Messages field value if set, zero value otherwise.
func (o *ErrorStatus) GetMessages() []ErrorStatusMessagesInner {
	if o == nil || IsNil(o.Messages) {
		var ret []ErrorStatusMessagesInner
		return ret
	}
	return o.Messages
}

// GetMessagesOk returns a tuple with the Messages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ErrorStatus) GetMessagesOk() ([]ErrorStatusMessagesInner, bool) {
	if o == nil || IsNil(o.Messages) {
		return nil, false
	}
	return o.Messages, true
}

// HasMessages returns a boolean if a field has been set.
func (o *ErrorStatus) HasMessages() bool {
	if o != nil && !IsNil(o.Messages) {
		return true
	}

	return false
}

// SetMessages gets a reference to the given []ErrorStatusMessagesInner and assigns it to the Messages field.
func (o *ErrorStatus) SetMessages(v []ErrorStatusMessagesInner) {
	o.Messages = v
}

func (o ErrorStatus) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ErrorStatus) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Messages) {
		toSerialize["messages"] = o.Messages
	}
	return toSerialize, nil
}

type NullableErrorStatus struct {
	value *ErrorStatus
	isSet bool
}

func (v NullableErrorStatus) Get() *ErrorStatus {
	return v.value
}

func (v *NullableErrorStatus) Set(val *ErrorStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableErrorStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableErrorStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableErrorStatus(val *ErrorStatus) *NullableErrorStatus {
	return &NullableErrorStatus{value: val, isSet: true}
}

func (v NullableErrorStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableErrorStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


