/*
Hedera Mirror Node REST API

The Mirror Node REST API offers the ability to query cryptocurrency transactions and account information from a Hedera managed mirror node.  Base url: [/api/v1](/api/v1)  OpenAPI Spec: [/api/v1/docs/openapi.yml](/api/v1/docs/openapi.yml)

API version: 0.89.0
Contact: mirrornode@hedera.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mirrorclient

import (
	"encoding/json"
)

// checks if the NetworkNodesResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NetworkNodesResponse{}

// NetworkNodesResponse struct for NetworkNodesResponse
type NetworkNodesResponse struct {
	Nodes []NetworkNode `json:"nodes"`
	Links Links `json:"links"`
}

// NewNetworkNodesResponse instantiates a new NetworkNodesResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNetworkNodesResponse(nodes []NetworkNode, links Links) *NetworkNodesResponse {
	this := NetworkNodesResponse{}
	this.Nodes = nodes
	this.Links = links
	return &this
}

// NewNetworkNodesResponseWithDefaults instantiates a new NetworkNodesResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNetworkNodesResponseWithDefaults() *NetworkNodesResponse {
	this := NetworkNodesResponse{}
	return &this
}

// GetNodes returns the Nodes field value
func (o *NetworkNodesResponse) GetNodes() []NetworkNode {
	if o == nil {
		var ret []NetworkNode
		return ret
	}

	return o.Nodes
}

// GetNodesOk returns a tuple with the Nodes field value
// and a boolean to check if the value has been set.
func (o *NetworkNodesResponse) GetNodesOk() ([]NetworkNode, bool) {
	if o == nil {
		return nil, false
	}
	return o.Nodes, true
}

// SetNodes sets field value
func (o *NetworkNodesResponse) SetNodes(v []NetworkNode) {
	o.Nodes = v
}

// GetLinks returns the Links field value
func (o *NetworkNodesResponse) GetLinks() Links {
	if o == nil {
		var ret Links
		return ret
	}

	return o.Links
}

// GetLinksOk returns a tuple with the Links field value
// and a boolean to check if the value has been set.
func (o *NetworkNodesResponse) GetLinksOk() (*Links, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Links, true
}

// SetLinks sets field value
func (o *NetworkNodesResponse) SetLinks(v Links) {
	o.Links = v
}

func (o NetworkNodesResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NetworkNodesResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["nodes"] = o.Nodes
	toSerialize["links"] = o.Links
	return toSerialize, nil
}

type NullableNetworkNodesResponse struct {
	value *NetworkNodesResponse
	isSet bool
}

func (v NullableNetworkNodesResponse) Get() *NetworkNodesResponse {
	return v.value
}

func (v *NullableNetworkNodesResponse) Set(val *NetworkNodesResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableNetworkNodesResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableNetworkNodesResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNetworkNodesResponse(val *NetworkNodesResponse) *NullableNetworkNodesResponse {
	return &NullableNetworkNodesResponse{value: val, isSet: true}
}

func (v NullableNetworkNodesResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNetworkNodesResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


