/*
Hedera Mirror Node REST API

The Mirror Node REST API offers the ability to query cryptocurrency transactions and account information from a Hedera managed mirror node.  Base url: [/api/v1](/api/v1)  OpenAPI Spec: [/api/v1/docs/openapi.yml](/api/v1/docs/openapi.yml)

API version: 0.89.0
Contact: mirrornode@hedera.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mirrorclient

import (
	"encoding/json"
)

// checks if the ServiceEndpoint type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ServiceEndpoint{}

// ServiceEndpoint struct for ServiceEndpoint
type ServiceEndpoint struct {
	IpAddressV4 string `json:"ip_address_v4"`
	Port int32 `json:"port"`
}

// NewServiceEndpoint instantiates a new ServiceEndpoint object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServiceEndpoint(ipAddressV4 string, port int32) *ServiceEndpoint {
	this := ServiceEndpoint{}
	this.IpAddressV4 = ipAddressV4
	this.Port = port
	return &this
}

// NewServiceEndpointWithDefaults instantiates a new ServiceEndpoint object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServiceEndpointWithDefaults() *ServiceEndpoint {
	this := ServiceEndpoint{}
	return &this
}

// GetIpAddressV4 returns the IpAddressV4 field value
func (o *ServiceEndpoint) GetIpAddressV4() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.IpAddressV4
}

// GetIpAddressV4Ok returns a tuple with the IpAddressV4 field value
// and a boolean to check if the value has been set.
func (o *ServiceEndpoint) GetIpAddressV4Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IpAddressV4, true
}

// SetIpAddressV4 sets field value
func (o *ServiceEndpoint) SetIpAddressV4(v string) {
	o.IpAddressV4 = v
}

// GetPort returns the Port field value
func (o *ServiceEndpoint) GetPort() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Port
}

// GetPortOk returns a tuple with the Port field value
// and a boolean to check if the value has been set.
func (o *ServiceEndpoint) GetPortOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Port, true
}

// SetPort sets field value
func (o *ServiceEndpoint) SetPort(v int32) {
	o.Port = v
}

func (o ServiceEndpoint) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ServiceEndpoint) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["ip_address_v4"] = o.IpAddressV4
	toSerialize["port"] = o.Port
	return toSerialize, nil
}

type NullableServiceEndpoint struct {
	value *ServiceEndpoint
	isSet bool
}

func (v NullableServiceEndpoint) Get() *ServiceEndpoint {
	return v.value
}

func (v *NullableServiceEndpoint) Set(val *ServiceEndpoint) {
	v.value = val
	v.isSet = true
}

func (v NullableServiceEndpoint) IsSet() bool {
	return v.isSet
}

func (v *NullableServiceEndpoint) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServiceEndpoint(val *ServiceEndpoint) *NullableServiceEndpoint {
	return &NullableServiceEndpoint{value: val, isSet: true}
}

func (v NullableServiceEndpoint) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServiceEndpoint) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


