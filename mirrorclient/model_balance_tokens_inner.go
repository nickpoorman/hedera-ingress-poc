/*
Hedera Mirror Node REST API

The Mirror Node REST API offers the ability to query cryptocurrency transactions and account information from a Hedera managed mirror node.  Base url: [/api/v1](/api/v1)  OpenAPI Spec: [/api/v1/docs/openapi.yml](/api/v1/docs/openapi.yml)

API version: 0.89.0
Contact: mirrornode@hedera.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mirrorclient

import (
	"encoding/json"
)

// checks if the BalanceTokensInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BalanceTokensInner{}

// BalanceTokensInner struct for BalanceTokensInner
type BalanceTokensInner struct {
	// Network entity ID in the format of `shard.realm.num`
	TokenId NullableString `json:"token_id,omitempty"`
	Balance *int64 `json:"balance,omitempty"`
}

// NewBalanceTokensInner instantiates a new BalanceTokensInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBalanceTokensInner() *BalanceTokensInner {
	this := BalanceTokensInner{}
	return &this
}

// NewBalanceTokensInnerWithDefaults instantiates a new BalanceTokensInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBalanceTokensInnerWithDefaults() *BalanceTokensInner {
	this := BalanceTokensInner{}
	return &this
}

// GetTokenId returns the TokenId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BalanceTokensInner) GetTokenId() string {
	if o == nil || IsNil(o.TokenId.Get()) {
		var ret string
		return ret
	}
	return *o.TokenId.Get()
}

// GetTokenIdOk returns a tuple with the TokenId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BalanceTokensInner) GetTokenIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TokenId.Get(), o.TokenId.IsSet()
}

// HasTokenId returns a boolean if a field has been set.
func (o *BalanceTokensInner) HasTokenId() bool {
	if o != nil && o.TokenId.IsSet() {
		return true
	}

	return false
}

// SetTokenId gets a reference to the given NullableString and assigns it to the TokenId field.
func (o *BalanceTokensInner) SetTokenId(v string) {
	o.TokenId.Set(&v)
}
// SetTokenIdNil sets the value for TokenId to be an explicit nil
func (o *BalanceTokensInner) SetTokenIdNil() {
	o.TokenId.Set(nil)
}

// UnsetTokenId ensures that no value is present for TokenId, not even an explicit nil
func (o *BalanceTokensInner) UnsetTokenId() {
	o.TokenId.Unset()
}

// GetBalance returns the Balance field value if set, zero value otherwise.
func (o *BalanceTokensInner) GetBalance() int64 {
	if o == nil || IsNil(o.Balance) {
		var ret int64
		return ret
	}
	return *o.Balance
}

// GetBalanceOk returns a tuple with the Balance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BalanceTokensInner) GetBalanceOk() (*int64, bool) {
	if o == nil || IsNil(o.Balance) {
		return nil, false
	}
	return o.Balance, true
}

// HasBalance returns a boolean if a field has been set.
func (o *BalanceTokensInner) HasBalance() bool {
	if o != nil && !IsNil(o.Balance) {
		return true
	}

	return false
}

// SetBalance gets a reference to the given int64 and assigns it to the Balance field.
func (o *BalanceTokensInner) SetBalance(v int64) {
	o.Balance = &v
}

func (o BalanceTokensInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BalanceTokensInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.TokenId.IsSet() {
		toSerialize["token_id"] = o.TokenId.Get()
	}
	if !IsNil(o.Balance) {
		toSerialize["balance"] = o.Balance
	}
	return toSerialize, nil
}

type NullableBalanceTokensInner struct {
	value *BalanceTokensInner
	isSet bool
}

func (v NullableBalanceTokensInner) Get() *BalanceTokensInner {
	return v.value
}

func (v *NullableBalanceTokensInner) Set(val *BalanceTokensInner) {
	v.value = val
	v.isSet = true
}

func (v NullableBalanceTokensInner) IsSet() bool {
	return v.isSet
}

func (v *NullableBalanceTokensInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBalanceTokensInner(val *BalanceTokensInner) *NullableBalanceTokensInner {
	return &NullableBalanceTokensInner{value: val, isSet: true}
}

func (v NullableBalanceTokensInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBalanceTokensInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


