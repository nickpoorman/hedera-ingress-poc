/*
Hedera Mirror Node REST API

The Mirror Node REST API offers the ability to query cryptocurrency transactions and account information from a Hedera managed mirror node.  Base url: [/api/v1](/api/v1)  OpenAPI Spec: [/api/v1/docs/openapi.yml](/api/v1/docs/openapi.yml)

API version: 0.89.0
Contact: mirrornode@hedera.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mirrorclient

import (
	"encoding/json"
)

// checks if the NetworkSupplyResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NetworkSupplyResponse{}

// NetworkSupplyResponse struct for NetworkSupplyResponse
type NetworkSupplyResponse struct {
	// The network's released supply of hbars in tinybars
	ReleasedSupply *string `json:"released_supply,omitempty"`
	Timestamp *string `json:"timestamp,omitempty"`
	// The network's total supply of hbars in tinybars
	TotalSupply *string `json:"total_supply,omitempty"`
}

// NewNetworkSupplyResponse instantiates a new NetworkSupplyResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNetworkSupplyResponse() *NetworkSupplyResponse {
	this := NetworkSupplyResponse{}
	return &this
}

// NewNetworkSupplyResponseWithDefaults instantiates a new NetworkSupplyResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNetworkSupplyResponseWithDefaults() *NetworkSupplyResponse {
	this := NetworkSupplyResponse{}
	return &this
}

// GetReleasedSupply returns the ReleasedSupply field value if set, zero value otherwise.
func (o *NetworkSupplyResponse) GetReleasedSupply() string {
	if o == nil || IsNil(o.ReleasedSupply) {
		var ret string
		return ret
	}
	return *o.ReleasedSupply
}

// GetReleasedSupplyOk returns a tuple with the ReleasedSupply field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkSupplyResponse) GetReleasedSupplyOk() (*string, bool) {
	if o == nil || IsNil(o.ReleasedSupply) {
		return nil, false
	}
	return o.ReleasedSupply, true
}

// HasReleasedSupply returns a boolean if a field has been set.
func (o *NetworkSupplyResponse) HasReleasedSupply() bool {
	if o != nil && !IsNil(o.ReleasedSupply) {
		return true
	}

	return false
}

// SetReleasedSupply gets a reference to the given string and assigns it to the ReleasedSupply field.
func (o *NetworkSupplyResponse) SetReleasedSupply(v string) {
	o.ReleasedSupply = &v
}

// GetTimestamp returns the Timestamp field value if set, zero value otherwise.
func (o *NetworkSupplyResponse) GetTimestamp() string {
	if o == nil || IsNil(o.Timestamp) {
		var ret string
		return ret
	}
	return *o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkSupplyResponse) GetTimestampOk() (*string, bool) {
	if o == nil || IsNil(o.Timestamp) {
		return nil, false
	}
	return o.Timestamp, true
}

// HasTimestamp returns a boolean if a field has been set.
func (o *NetworkSupplyResponse) HasTimestamp() bool {
	if o != nil && !IsNil(o.Timestamp) {
		return true
	}

	return false
}

// SetTimestamp gets a reference to the given string and assigns it to the Timestamp field.
func (o *NetworkSupplyResponse) SetTimestamp(v string) {
	o.Timestamp = &v
}

// GetTotalSupply returns the TotalSupply field value if set, zero value otherwise.
func (o *NetworkSupplyResponse) GetTotalSupply() string {
	if o == nil || IsNil(o.TotalSupply) {
		var ret string
		return ret
	}
	return *o.TotalSupply
}

// GetTotalSupplyOk returns a tuple with the TotalSupply field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkSupplyResponse) GetTotalSupplyOk() (*string, bool) {
	if o == nil || IsNil(o.TotalSupply) {
		return nil, false
	}
	return o.TotalSupply, true
}

// HasTotalSupply returns a boolean if a field has been set.
func (o *NetworkSupplyResponse) HasTotalSupply() bool {
	if o != nil && !IsNil(o.TotalSupply) {
		return true
	}

	return false
}

// SetTotalSupply gets a reference to the given string and assigns it to the TotalSupply field.
func (o *NetworkSupplyResponse) SetTotalSupply(v string) {
	o.TotalSupply = &v
}

func (o NetworkSupplyResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NetworkSupplyResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ReleasedSupply) {
		toSerialize["released_supply"] = o.ReleasedSupply
	}
	if !IsNil(o.Timestamp) {
		toSerialize["timestamp"] = o.Timestamp
	}
	if !IsNil(o.TotalSupply) {
		toSerialize["total_supply"] = o.TotalSupply
	}
	return toSerialize, nil
}

type NullableNetworkSupplyResponse struct {
	value *NetworkSupplyResponse
	isSet bool
}

func (v NullableNetworkSupplyResponse) Get() *NetworkSupplyResponse {
	return v.value
}

func (v *NullableNetworkSupplyResponse) Set(val *NetworkSupplyResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableNetworkSupplyResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableNetworkSupplyResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNetworkSupplyResponse(val *NetworkSupplyResponse) *NullableNetworkSupplyResponse {
	return &NullableNetworkSupplyResponse{value: val, isSet: true}
}

func (v NullableNetworkSupplyResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNetworkSupplyResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


