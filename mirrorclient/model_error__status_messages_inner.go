/*
Hedera Mirror Node REST API

The Mirror Node REST API offers the ability to query cryptocurrency transactions and account information from a Hedera managed mirror node.  Base url: [/api/v1](/api/v1)  OpenAPI Spec: [/api/v1/docs/openapi.yml](/api/v1/docs/openapi.yml)

API version: 0.89.0
Contact: mirrornode@hedera.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mirrorclient

import (
	"encoding/json"
	"os"
)

// checks if the ErrorStatusMessagesInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ErrorStatusMessagesInner{}

// ErrorStatusMessagesInner struct for ErrorStatusMessagesInner
type ErrorStatusMessagesInner struct {
	// Error message in hexadecimal
	Data Nullable*os.File `json:"data,omitempty"`
	// Detailed error message
	Detail NullableString `json:"detail,omitempty"`
	// Error message
	Message *string `json:"message,omitempty"`
}

// NewErrorStatusMessagesInner instantiates a new ErrorStatusMessagesInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewErrorStatusMessagesInner() *ErrorStatusMessagesInner {
	this := ErrorStatusMessagesInner{}
	return &this
}

// NewErrorStatusMessagesInnerWithDefaults instantiates a new ErrorStatusMessagesInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewErrorStatusMessagesInnerWithDefaults() *ErrorStatusMessagesInner {
	this := ErrorStatusMessagesInner{}
	return &this
}

// GetData returns the Data field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ErrorStatusMessagesInner) GetData() *os.File {
	if o == nil || IsNil(o.Data.Get()) {
		var ret *os.File
		return ret
	}
	return *o.Data.Get()
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ErrorStatusMessagesInner) GetDataOk() (**os.File, bool) {
	if o == nil {
		return nil, false
	}
	return o.Data.Get(), o.Data.IsSet()
}

// HasData returns a boolean if a field has been set.
func (o *ErrorStatusMessagesInner) HasData() bool {
	if o != nil && o.Data.IsSet() {
		return true
	}

	return false
}

// SetData gets a reference to the given Nullable*os.File and assigns it to the Data field.
func (o *ErrorStatusMessagesInner) SetData(v *os.File) {
	o.Data.Set(&v)
}
// SetDataNil sets the value for Data to be an explicit nil
func (o *ErrorStatusMessagesInner) SetDataNil() {
	o.Data.Set(nil)
}

// UnsetData ensures that no value is present for Data, not even an explicit nil
func (o *ErrorStatusMessagesInner) UnsetData() {
	o.Data.Unset()
}

// GetDetail returns the Detail field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ErrorStatusMessagesInner) GetDetail() string {
	if o == nil || IsNil(o.Detail.Get()) {
		var ret string
		return ret
	}
	return *o.Detail.Get()
}

// GetDetailOk returns a tuple with the Detail field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ErrorStatusMessagesInner) GetDetailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Detail.Get(), o.Detail.IsSet()
}

// HasDetail returns a boolean if a field has been set.
func (o *ErrorStatusMessagesInner) HasDetail() bool {
	if o != nil && o.Detail.IsSet() {
		return true
	}

	return false
}

// SetDetail gets a reference to the given NullableString and assigns it to the Detail field.
func (o *ErrorStatusMessagesInner) SetDetail(v string) {
	o.Detail.Set(&v)
}
// SetDetailNil sets the value for Detail to be an explicit nil
func (o *ErrorStatusMessagesInner) SetDetailNil() {
	o.Detail.Set(nil)
}

// UnsetDetail ensures that no value is present for Detail, not even an explicit nil
func (o *ErrorStatusMessagesInner) UnsetDetail() {
	o.Detail.Unset()
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *ErrorStatusMessagesInner) GetMessage() string {
	if o == nil || IsNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ErrorStatusMessagesInner) GetMessageOk() (*string, bool) {
	if o == nil || IsNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *ErrorStatusMessagesInner) HasMessage() bool {
	if o != nil && !IsNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *ErrorStatusMessagesInner) SetMessage(v string) {
	o.Message = &v
}

func (o ErrorStatusMessagesInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ErrorStatusMessagesInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Data.IsSet() {
		toSerialize["data"] = o.Data.Get()
	}
	if o.Detail.IsSet() {
		toSerialize["detail"] = o.Detail.Get()
	}
	if !IsNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	return toSerialize, nil
}

type NullableErrorStatusMessagesInner struct {
	value *ErrorStatusMessagesInner
	isSet bool
}

func (v NullableErrorStatusMessagesInner) Get() *ErrorStatusMessagesInner {
	return v.value
}

func (v *NullableErrorStatusMessagesInner) Set(val *ErrorStatusMessagesInner) {
	v.value = val
	v.isSet = true
}

func (v NullableErrorStatusMessagesInner) IsSet() bool {
	return v.isSet
}

func (v *NullableErrorStatusMessagesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableErrorStatusMessagesInner(val *ErrorStatusMessagesInner) *NullableErrorStatusMessagesInner {
	return &NullableErrorStatusMessagesInner{value: val, isSet: true}
}

func (v NullableErrorStatusMessagesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableErrorStatusMessagesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


