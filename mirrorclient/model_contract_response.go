/*
Hedera Mirror Node REST API

The Mirror Node REST API offers the ability to query cryptocurrency transactions and account information from a Hedera managed mirror node.  Base url: [/api/v1](/api/v1)  OpenAPI Spec: [/api/v1/docs/openapi.yml](/api/v1/docs/openapi.yml)

API version: 0.89.0
Contact: mirrornode@hedera.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mirrorclient

import (
	"encoding/json"
	"os"
)

// checks if the ContractResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ContractResponse{}

// ContractResponse struct for ContractResponse
type ContractResponse struct {
	AdminKey NullableKey `json:"admin_key,omitempty"`
	// Network entity ID in the format of `shard.realm.num`
	AutoRenewAccount NullableString `json:"auto_renew_account,omitempty"`
	AutoRenewPeriod NullableInt64 `json:"auto_renew_period,omitempty"`
	// Network entity ID in the format of `shard.realm.num`
	ContractId NullableString `json:"contract_id,omitempty"`
	CreatedTimestamp NullableString `json:"created_timestamp,omitempty"`
	Deleted *bool `json:"deleted,omitempty"`
	// A network entity encoded as an EVM address in hex.
	EvmAddress **os.File `json:"evm_address,omitempty"`
	ExpirationTimestamp NullableString `json:"expiration_timestamp,omitempty"`
	// Network entity ID in the format of `shard.realm.num`
	FileId NullableString `json:"file_id,omitempty"`
	MaxAutomaticTokenAssociations NullableInt32 `json:"max_automatic_token_associations,omitempty"`
	Memo *string `json:"memo,omitempty"`
	// Network entity ID in the format of `shard.realm.num`
	ObtainerId NullableString `json:"obtainer_id,omitempty"`
	PermanentRemoval NullableBool `json:"permanent_removal,omitempty"`
	// Network entity ID in the format of `shard.realm.num`
	ProxyAccountId NullableString `json:"proxy_account_id,omitempty"`
	Timestamp *TimestampRange `json:"timestamp,omitempty"`
	// The contract bytecode in hex during deployment
	Bytecode Nullable*os.File `json:"bytecode,omitempty"`
	// The contract bytecode in hex after deployment
	RuntimeBytecode Nullable*os.File `json:"runtime_bytecode,omitempty"`
}

// NewContractResponse instantiates a new ContractResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewContractResponse() *ContractResponse {
	this := ContractResponse{}
	return &this
}

// NewContractResponseWithDefaults instantiates a new ContractResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewContractResponseWithDefaults() *ContractResponse {
	this := ContractResponse{}
	return &this
}

// GetAdminKey returns the AdminKey field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ContractResponse) GetAdminKey() Key {
	if o == nil || IsNil(o.AdminKey.Get()) {
		var ret Key
		return ret
	}
	return *o.AdminKey.Get()
}

// GetAdminKeyOk returns a tuple with the AdminKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContractResponse) GetAdminKeyOk() (*Key, bool) {
	if o == nil {
		return nil, false
	}
	return o.AdminKey.Get(), o.AdminKey.IsSet()
}

// HasAdminKey returns a boolean if a field has been set.
func (o *ContractResponse) HasAdminKey() bool {
	if o != nil && o.AdminKey.IsSet() {
		return true
	}

	return false
}

// SetAdminKey gets a reference to the given NullableKey and assigns it to the AdminKey field.
func (o *ContractResponse) SetAdminKey(v Key) {
	o.AdminKey.Set(&v)
}
// SetAdminKeyNil sets the value for AdminKey to be an explicit nil
func (o *ContractResponse) SetAdminKeyNil() {
	o.AdminKey.Set(nil)
}

// UnsetAdminKey ensures that no value is present for AdminKey, not even an explicit nil
func (o *ContractResponse) UnsetAdminKey() {
	o.AdminKey.Unset()
}

// GetAutoRenewAccount returns the AutoRenewAccount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ContractResponse) GetAutoRenewAccount() string {
	if o == nil || IsNil(o.AutoRenewAccount.Get()) {
		var ret string
		return ret
	}
	return *o.AutoRenewAccount.Get()
}

// GetAutoRenewAccountOk returns a tuple with the AutoRenewAccount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContractResponse) GetAutoRenewAccountOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AutoRenewAccount.Get(), o.AutoRenewAccount.IsSet()
}

// HasAutoRenewAccount returns a boolean if a field has been set.
func (o *ContractResponse) HasAutoRenewAccount() bool {
	if o != nil && o.AutoRenewAccount.IsSet() {
		return true
	}

	return false
}

// SetAutoRenewAccount gets a reference to the given NullableString and assigns it to the AutoRenewAccount field.
func (o *ContractResponse) SetAutoRenewAccount(v string) {
	o.AutoRenewAccount.Set(&v)
}
// SetAutoRenewAccountNil sets the value for AutoRenewAccount to be an explicit nil
func (o *ContractResponse) SetAutoRenewAccountNil() {
	o.AutoRenewAccount.Set(nil)
}

// UnsetAutoRenewAccount ensures that no value is present for AutoRenewAccount, not even an explicit nil
func (o *ContractResponse) UnsetAutoRenewAccount() {
	o.AutoRenewAccount.Unset()
}

// GetAutoRenewPeriod returns the AutoRenewPeriod field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ContractResponse) GetAutoRenewPeriod() int64 {
	if o == nil || IsNil(o.AutoRenewPeriod.Get()) {
		var ret int64
		return ret
	}
	return *o.AutoRenewPeriod.Get()
}

// GetAutoRenewPeriodOk returns a tuple with the AutoRenewPeriod field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContractResponse) GetAutoRenewPeriodOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.AutoRenewPeriod.Get(), o.AutoRenewPeriod.IsSet()
}

// HasAutoRenewPeriod returns a boolean if a field has been set.
func (o *ContractResponse) HasAutoRenewPeriod() bool {
	if o != nil && o.AutoRenewPeriod.IsSet() {
		return true
	}

	return false
}

// SetAutoRenewPeriod gets a reference to the given NullableInt64 and assigns it to the AutoRenewPeriod field.
func (o *ContractResponse) SetAutoRenewPeriod(v int64) {
	o.AutoRenewPeriod.Set(&v)
}
// SetAutoRenewPeriodNil sets the value for AutoRenewPeriod to be an explicit nil
func (o *ContractResponse) SetAutoRenewPeriodNil() {
	o.AutoRenewPeriod.Set(nil)
}

// UnsetAutoRenewPeriod ensures that no value is present for AutoRenewPeriod, not even an explicit nil
func (o *ContractResponse) UnsetAutoRenewPeriod() {
	o.AutoRenewPeriod.Unset()
}

// GetContractId returns the ContractId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ContractResponse) GetContractId() string {
	if o == nil || IsNil(o.ContractId.Get()) {
		var ret string
		return ret
	}
	return *o.ContractId.Get()
}

// GetContractIdOk returns a tuple with the ContractId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContractResponse) GetContractIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ContractId.Get(), o.ContractId.IsSet()
}

// HasContractId returns a boolean if a field has been set.
func (o *ContractResponse) HasContractId() bool {
	if o != nil && o.ContractId.IsSet() {
		return true
	}

	return false
}

// SetContractId gets a reference to the given NullableString and assigns it to the ContractId field.
func (o *ContractResponse) SetContractId(v string) {
	o.ContractId.Set(&v)
}
// SetContractIdNil sets the value for ContractId to be an explicit nil
func (o *ContractResponse) SetContractIdNil() {
	o.ContractId.Set(nil)
}

// UnsetContractId ensures that no value is present for ContractId, not even an explicit nil
func (o *ContractResponse) UnsetContractId() {
	o.ContractId.Unset()
}

// GetCreatedTimestamp returns the CreatedTimestamp field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ContractResponse) GetCreatedTimestamp() string {
	if o == nil || IsNil(o.CreatedTimestamp.Get()) {
		var ret string
		return ret
	}
	return *o.CreatedTimestamp.Get()
}

// GetCreatedTimestampOk returns a tuple with the CreatedTimestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContractResponse) GetCreatedTimestampOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CreatedTimestamp.Get(), o.CreatedTimestamp.IsSet()
}

// HasCreatedTimestamp returns a boolean if a field has been set.
func (o *ContractResponse) HasCreatedTimestamp() bool {
	if o != nil && o.CreatedTimestamp.IsSet() {
		return true
	}

	return false
}

// SetCreatedTimestamp gets a reference to the given NullableString and assigns it to the CreatedTimestamp field.
func (o *ContractResponse) SetCreatedTimestamp(v string) {
	o.CreatedTimestamp.Set(&v)
}
// SetCreatedTimestampNil sets the value for CreatedTimestamp to be an explicit nil
func (o *ContractResponse) SetCreatedTimestampNil() {
	o.CreatedTimestamp.Set(nil)
}

// UnsetCreatedTimestamp ensures that no value is present for CreatedTimestamp, not even an explicit nil
func (o *ContractResponse) UnsetCreatedTimestamp() {
	o.CreatedTimestamp.Unset()
}

// GetDeleted returns the Deleted field value if set, zero value otherwise.
func (o *ContractResponse) GetDeleted() bool {
	if o == nil || IsNil(o.Deleted) {
		var ret bool
		return ret
	}
	return *o.Deleted
}

// GetDeletedOk returns a tuple with the Deleted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContractResponse) GetDeletedOk() (*bool, bool) {
	if o == nil || IsNil(o.Deleted) {
		return nil, false
	}
	return o.Deleted, true
}

// HasDeleted returns a boolean if a field has been set.
func (o *ContractResponse) HasDeleted() bool {
	if o != nil && !IsNil(o.Deleted) {
		return true
	}

	return false
}

// SetDeleted gets a reference to the given bool and assigns it to the Deleted field.
func (o *ContractResponse) SetDeleted(v bool) {
	o.Deleted = &v
}

// GetEvmAddress returns the EvmAddress field value if set, zero value otherwise.
func (o *ContractResponse) GetEvmAddress() *os.File {
	if o == nil || IsNil(o.EvmAddress) {
		var ret *os.File
		return ret
	}
	return *o.EvmAddress
}

// GetEvmAddressOk returns a tuple with the EvmAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContractResponse) GetEvmAddressOk() (**os.File, bool) {
	if o == nil || IsNil(o.EvmAddress) {
		return nil, false
	}
	return o.EvmAddress, true
}

// HasEvmAddress returns a boolean if a field has been set.
func (o *ContractResponse) HasEvmAddress() bool {
	if o != nil && !IsNil(o.EvmAddress) {
		return true
	}

	return false
}

// SetEvmAddress gets a reference to the given *os.File and assigns it to the EvmAddress field.
func (o *ContractResponse) SetEvmAddress(v *os.File) {
	o.EvmAddress = &v
}

// GetExpirationTimestamp returns the ExpirationTimestamp field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ContractResponse) GetExpirationTimestamp() string {
	if o == nil || IsNil(o.ExpirationTimestamp.Get()) {
		var ret string
		return ret
	}
	return *o.ExpirationTimestamp.Get()
}

// GetExpirationTimestampOk returns a tuple with the ExpirationTimestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContractResponse) GetExpirationTimestampOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ExpirationTimestamp.Get(), o.ExpirationTimestamp.IsSet()
}

// HasExpirationTimestamp returns a boolean if a field has been set.
func (o *ContractResponse) HasExpirationTimestamp() bool {
	if o != nil && o.ExpirationTimestamp.IsSet() {
		return true
	}

	return false
}

// SetExpirationTimestamp gets a reference to the given NullableString and assigns it to the ExpirationTimestamp field.
func (o *ContractResponse) SetExpirationTimestamp(v string) {
	o.ExpirationTimestamp.Set(&v)
}
// SetExpirationTimestampNil sets the value for ExpirationTimestamp to be an explicit nil
func (o *ContractResponse) SetExpirationTimestampNil() {
	o.ExpirationTimestamp.Set(nil)
}

// UnsetExpirationTimestamp ensures that no value is present for ExpirationTimestamp, not even an explicit nil
func (o *ContractResponse) UnsetExpirationTimestamp() {
	o.ExpirationTimestamp.Unset()
}

// GetFileId returns the FileId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ContractResponse) GetFileId() string {
	if o == nil || IsNil(o.FileId.Get()) {
		var ret string
		return ret
	}
	return *o.FileId.Get()
}

// GetFileIdOk returns a tuple with the FileId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContractResponse) GetFileIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.FileId.Get(), o.FileId.IsSet()
}

// HasFileId returns a boolean if a field has been set.
func (o *ContractResponse) HasFileId() bool {
	if o != nil && o.FileId.IsSet() {
		return true
	}

	return false
}

// SetFileId gets a reference to the given NullableString and assigns it to the FileId field.
func (o *ContractResponse) SetFileId(v string) {
	o.FileId.Set(&v)
}
// SetFileIdNil sets the value for FileId to be an explicit nil
func (o *ContractResponse) SetFileIdNil() {
	o.FileId.Set(nil)
}

// UnsetFileId ensures that no value is present for FileId, not even an explicit nil
func (o *ContractResponse) UnsetFileId() {
	o.FileId.Unset()
}

// GetMaxAutomaticTokenAssociations returns the MaxAutomaticTokenAssociations field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ContractResponse) GetMaxAutomaticTokenAssociations() int32 {
	if o == nil || IsNil(o.MaxAutomaticTokenAssociations.Get()) {
		var ret int32
		return ret
	}
	return *o.MaxAutomaticTokenAssociations.Get()
}

// GetMaxAutomaticTokenAssociationsOk returns a tuple with the MaxAutomaticTokenAssociations field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContractResponse) GetMaxAutomaticTokenAssociationsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.MaxAutomaticTokenAssociations.Get(), o.MaxAutomaticTokenAssociations.IsSet()
}

// HasMaxAutomaticTokenAssociations returns a boolean if a field has been set.
func (o *ContractResponse) HasMaxAutomaticTokenAssociations() bool {
	if o != nil && o.MaxAutomaticTokenAssociations.IsSet() {
		return true
	}

	return false
}

// SetMaxAutomaticTokenAssociations gets a reference to the given NullableInt32 and assigns it to the MaxAutomaticTokenAssociations field.
func (o *ContractResponse) SetMaxAutomaticTokenAssociations(v int32) {
	o.MaxAutomaticTokenAssociations.Set(&v)
}
// SetMaxAutomaticTokenAssociationsNil sets the value for MaxAutomaticTokenAssociations to be an explicit nil
func (o *ContractResponse) SetMaxAutomaticTokenAssociationsNil() {
	o.MaxAutomaticTokenAssociations.Set(nil)
}

// UnsetMaxAutomaticTokenAssociations ensures that no value is present for MaxAutomaticTokenAssociations, not even an explicit nil
func (o *ContractResponse) UnsetMaxAutomaticTokenAssociations() {
	o.MaxAutomaticTokenAssociations.Unset()
}

// GetMemo returns the Memo field value if set, zero value otherwise.
func (o *ContractResponse) GetMemo() string {
	if o == nil || IsNil(o.Memo) {
		var ret string
		return ret
	}
	return *o.Memo
}

// GetMemoOk returns a tuple with the Memo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContractResponse) GetMemoOk() (*string, bool) {
	if o == nil || IsNil(o.Memo) {
		return nil, false
	}
	return o.Memo, true
}

// HasMemo returns a boolean if a field has been set.
func (o *ContractResponse) HasMemo() bool {
	if o != nil && !IsNil(o.Memo) {
		return true
	}

	return false
}

// SetMemo gets a reference to the given string and assigns it to the Memo field.
func (o *ContractResponse) SetMemo(v string) {
	o.Memo = &v
}

// GetObtainerId returns the ObtainerId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ContractResponse) GetObtainerId() string {
	if o == nil || IsNil(o.ObtainerId.Get()) {
		var ret string
		return ret
	}
	return *o.ObtainerId.Get()
}

// GetObtainerIdOk returns a tuple with the ObtainerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContractResponse) GetObtainerIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ObtainerId.Get(), o.ObtainerId.IsSet()
}

// HasObtainerId returns a boolean if a field has been set.
func (o *ContractResponse) HasObtainerId() bool {
	if o != nil && o.ObtainerId.IsSet() {
		return true
	}

	return false
}

// SetObtainerId gets a reference to the given NullableString and assigns it to the ObtainerId field.
func (o *ContractResponse) SetObtainerId(v string) {
	o.ObtainerId.Set(&v)
}
// SetObtainerIdNil sets the value for ObtainerId to be an explicit nil
func (o *ContractResponse) SetObtainerIdNil() {
	o.ObtainerId.Set(nil)
}

// UnsetObtainerId ensures that no value is present for ObtainerId, not even an explicit nil
func (o *ContractResponse) UnsetObtainerId() {
	o.ObtainerId.Unset()
}

// GetPermanentRemoval returns the PermanentRemoval field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ContractResponse) GetPermanentRemoval() bool {
	if o == nil || IsNil(o.PermanentRemoval.Get()) {
		var ret bool
		return ret
	}
	return *o.PermanentRemoval.Get()
}

// GetPermanentRemovalOk returns a tuple with the PermanentRemoval field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContractResponse) GetPermanentRemovalOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.PermanentRemoval.Get(), o.PermanentRemoval.IsSet()
}

// HasPermanentRemoval returns a boolean if a field has been set.
func (o *ContractResponse) HasPermanentRemoval() bool {
	if o != nil && o.PermanentRemoval.IsSet() {
		return true
	}

	return false
}

// SetPermanentRemoval gets a reference to the given NullableBool and assigns it to the PermanentRemoval field.
func (o *ContractResponse) SetPermanentRemoval(v bool) {
	o.PermanentRemoval.Set(&v)
}
// SetPermanentRemovalNil sets the value for PermanentRemoval to be an explicit nil
func (o *ContractResponse) SetPermanentRemovalNil() {
	o.PermanentRemoval.Set(nil)
}

// UnsetPermanentRemoval ensures that no value is present for PermanentRemoval, not even an explicit nil
func (o *ContractResponse) UnsetPermanentRemoval() {
	o.PermanentRemoval.Unset()
}

// GetProxyAccountId returns the ProxyAccountId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ContractResponse) GetProxyAccountId() string {
	if o == nil || IsNil(o.ProxyAccountId.Get()) {
		var ret string
		return ret
	}
	return *o.ProxyAccountId.Get()
}

// GetProxyAccountIdOk returns a tuple with the ProxyAccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContractResponse) GetProxyAccountIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProxyAccountId.Get(), o.ProxyAccountId.IsSet()
}

// HasProxyAccountId returns a boolean if a field has been set.
func (o *ContractResponse) HasProxyAccountId() bool {
	if o != nil && o.ProxyAccountId.IsSet() {
		return true
	}

	return false
}

// SetProxyAccountId gets a reference to the given NullableString and assigns it to the ProxyAccountId field.
func (o *ContractResponse) SetProxyAccountId(v string) {
	o.ProxyAccountId.Set(&v)
}
// SetProxyAccountIdNil sets the value for ProxyAccountId to be an explicit nil
func (o *ContractResponse) SetProxyAccountIdNil() {
	o.ProxyAccountId.Set(nil)
}

// UnsetProxyAccountId ensures that no value is present for ProxyAccountId, not even an explicit nil
func (o *ContractResponse) UnsetProxyAccountId() {
	o.ProxyAccountId.Unset()
}

// GetTimestamp returns the Timestamp field value if set, zero value otherwise.
func (o *ContractResponse) GetTimestamp() TimestampRange {
	if o == nil || IsNil(o.Timestamp) {
		var ret TimestampRange
		return ret
	}
	return *o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContractResponse) GetTimestampOk() (*TimestampRange, bool) {
	if o == nil || IsNil(o.Timestamp) {
		return nil, false
	}
	return o.Timestamp, true
}

// HasTimestamp returns a boolean if a field has been set.
func (o *ContractResponse) HasTimestamp() bool {
	if o != nil && !IsNil(o.Timestamp) {
		return true
	}

	return false
}

// SetTimestamp gets a reference to the given TimestampRange and assigns it to the Timestamp field.
func (o *ContractResponse) SetTimestamp(v TimestampRange) {
	o.Timestamp = &v
}

// GetBytecode returns the Bytecode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ContractResponse) GetBytecode() *os.File {
	if o == nil || IsNil(o.Bytecode.Get()) {
		var ret *os.File
		return ret
	}
	return *o.Bytecode.Get()
}

// GetBytecodeOk returns a tuple with the Bytecode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContractResponse) GetBytecodeOk() (**os.File, bool) {
	if o == nil {
		return nil, false
	}
	return o.Bytecode.Get(), o.Bytecode.IsSet()
}

// HasBytecode returns a boolean if a field has been set.
func (o *ContractResponse) HasBytecode() bool {
	if o != nil && o.Bytecode.IsSet() {
		return true
	}

	return false
}

// SetBytecode gets a reference to the given Nullable*os.File and assigns it to the Bytecode field.
func (o *ContractResponse) SetBytecode(v *os.File) {
	o.Bytecode.Set(&v)
}
// SetBytecodeNil sets the value for Bytecode to be an explicit nil
func (o *ContractResponse) SetBytecodeNil() {
	o.Bytecode.Set(nil)
}

// UnsetBytecode ensures that no value is present for Bytecode, not even an explicit nil
func (o *ContractResponse) UnsetBytecode() {
	o.Bytecode.Unset()
}

// GetRuntimeBytecode returns the RuntimeBytecode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ContractResponse) GetRuntimeBytecode() *os.File {
	if o == nil || IsNil(o.RuntimeBytecode.Get()) {
		var ret *os.File
		return ret
	}
	return *o.RuntimeBytecode.Get()
}

// GetRuntimeBytecodeOk returns a tuple with the RuntimeBytecode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContractResponse) GetRuntimeBytecodeOk() (**os.File, bool) {
	if o == nil {
		return nil, false
	}
	return o.RuntimeBytecode.Get(), o.RuntimeBytecode.IsSet()
}

// HasRuntimeBytecode returns a boolean if a field has been set.
func (o *ContractResponse) HasRuntimeBytecode() bool {
	if o != nil && o.RuntimeBytecode.IsSet() {
		return true
	}

	return false
}

// SetRuntimeBytecode gets a reference to the given Nullable*os.File and assigns it to the RuntimeBytecode field.
func (o *ContractResponse) SetRuntimeBytecode(v *os.File) {
	o.RuntimeBytecode.Set(&v)
}
// SetRuntimeBytecodeNil sets the value for RuntimeBytecode to be an explicit nil
func (o *ContractResponse) SetRuntimeBytecodeNil() {
	o.RuntimeBytecode.Set(nil)
}

// UnsetRuntimeBytecode ensures that no value is present for RuntimeBytecode, not even an explicit nil
func (o *ContractResponse) UnsetRuntimeBytecode() {
	o.RuntimeBytecode.Unset()
}

func (o ContractResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ContractResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.AdminKey.IsSet() {
		toSerialize["admin_key"] = o.AdminKey.Get()
	}
	if o.AutoRenewAccount.IsSet() {
		toSerialize["auto_renew_account"] = o.AutoRenewAccount.Get()
	}
	if o.AutoRenewPeriod.IsSet() {
		toSerialize["auto_renew_period"] = o.AutoRenewPeriod.Get()
	}
	if o.ContractId.IsSet() {
		toSerialize["contract_id"] = o.ContractId.Get()
	}
	if o.CreatedTimestamp.IsSet() {
		toSerialize["created_timestamp"] = o.CreatedTimestamp.Get()
	}
	if !IsNil(o.Deleted) {
		toSerialize["deleted"] = o.Deleted
	}
	if !IsNil(o.EvmAddress) {
		toSerialize["evm_address"] = o.EvmAddress
	}
	if o.ExpirationTimestamp.IsSet() {
		toSerialize["expiration_timestamp"] = o.ExpirationTimestamp.Get()
	}
	if o.FileId.IsSet() {
		toSerialize["file_id"] = o.FileId.Get()
	}
	if o.MaxAutomaticTokenAssociations.IsSet() {
		toSerialize["max_automatic_token_associations"] = o.MaxAutomaticTokenAssociations.Get()
	}
	if !IsNil(o.Memo) {
		toSerialize["memo"] = o.Memo
	}
	if o.ObtainerId.IsSet() {
		toSerialize["obtainer_id"] = o.ObtainerId.Get()
	}
	if o.PermanentRemoval.IsSet() {
		toSerialize["permanent_removal"] = o.PermanentRemoval.Get()
	}
	if o.ProxyAccountId.IsSet() {
		toSerialize["proxy_account_id"] = o.ProxyAccountId.Get()
	}
	if !IsNil(o.Timestamp) {
		toSerialize["timestamp"] = o.Timestamp
	}
	if o.Bytecode.IsSet() {
		toSerialize["bytecode"] = o.Bytecode.Get()
	}
	if o.RuntimeBytecode.IsSet() {
		toSerialize["runtime_bytecode"] = o.RuntimeBytecode.Get()
	}
	return toSerialize, nil
}

type NullableContractResponse struct {
	value *ContractResponse
	isSet bool
}

func (v NullableContractResponse) Get() *ContractResponse {
	return v.value
}

func (v *NullableContractResponse) Set(val *ContractResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableContractResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableContractResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableContractResponse(val *ContractResponse) *NullableContractResponse {
	return &NullableContractResponse{value: val, isSet: true}
}

func (v NullableContractResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableContractResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


